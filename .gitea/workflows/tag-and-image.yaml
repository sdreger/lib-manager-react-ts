name: Create a new tag and build a new image
on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  NEXT_TAG: 0.0.3
  REGISTRY: "gitea.dreger.lan"
  IMAGE_NAME: ${{ gitea.repository }}

jobs:
  tag-and-image:
    if: gitea.event.pull_request.merged == true
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
      - name: Use Node.js 23.8.0
        uses: actions/setup-node@v4
        with:
          node-version: 23.8.0
      - name: Download dependencies
        run: npm install
      - name: Build the code
        run: npm run build
      - name: Run tests
        run: npm run test:run
      - name: Add broker CA
        env:
          CA_SECRET: ${{ secrets.PACT_BROKER_CA }}
        shell: bash
        run: |
          printf '%s' "${CA_SECRET}" > pact-broker-ca.pem
      - name: Publish Pact files
        uses: addnab/docker-run-action@v3
        with:
          image: pactfoundation/pact-cli:latest
          options: >
            --volumes-from=${{ env.JOB_CONTAINER_NAME }} 
            -e PACT_DO_NOT_TRACK=true 
            -e SSL_CERT_FILE=pact-broker-ca.pem
          docker_network: gitea
          run: |
            cd ${{ gitea.workspace }}
            pact publish pacts \
            --broker-base-url ${{ vars.PACT_BROKER_BASE_URL }} \
            --auto-detect-version-properties \
            --consumer-app-version ${{ env.NEXT_TAG }} \
            --branch ${{ env.GITHUB_BASE_REF }}
      - name: Create a new Git tag
        run: |
          git config --local user.email "actions@gitea.dreger.lan"
          git config --local user.name "Gitea Actions"
          git tag -a "${{ env.NEXT_TAG }}" -m "Release ${{ github.run_number }}"
          git push origin "${{ env.NEXT_TAG }}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Add registry CA
        env:
          CA_SECRET: ${{ secrets.REGISTRY_CA }}
        shell: bash
        run: |
          printf '%s' "$CA_SECRET" > /etc/ssl/certs/registry-ca.pem
          update-ca-certificates
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [registry."${{ env.REGISTRY }}"]
              ca=["/etc/ssl/certs/registry-ca.pem"]
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ gitea.repository_owner }}
          password: ${{ secrets.CI_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}},value=${{ env.NEXT_TAG }}
          labels: org.opencontainers.image.description=Library manager React application
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: deploy/docker/Dockerfile
          target: no-api-proxy
          push: true
          platforms: linux/amd64
          provenance: false # https://github.com/docker/build-push-action/issues/820
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
